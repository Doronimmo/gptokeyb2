name: gptokeyb2 Build

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
      options: --privileged
    name: Debian ${{ matrix.arch.name }}
    strategy:
      fail-fast: false
      matrix:
        arch: 
          - name: arm64
            cross: aarch64-linux-gnu
            executable: aarch64
            triplet: aarch64-linux-gnu
          - name: armhf
            cross: arm-linux-gnueabihf
            executable: armhf
            triplet: arm-linux-gnueabihf

    steps:
      - name: Install base dependencies
        run: |
          apt update
          apt install -y --no-install-recommends python3 git build-essential patchelf ca-certificates cmake ninja-build wget gnupg

      - name: Setup cross-compilation environment
        run: |
          dpkg --add-architecture ${{ matrix.arch.name }}
          echo "deb http://deb.debian.org/debian bullseye main" > /etc/apt/sources.list
          echo "deb http://deb.debian.org/debian-security bullseye-security main" >> /etc/apt/sources.list
          echo "deb http://deb.debian.org/debian bullseye-updates main" >> /etc/apt/sources.list
          apt update
          apt install -y --no-install-recommends \
            crossbuild-essential-${{ matrix.arch.name }} \
            libsdl2-dev:${{ matrix.arch.name }} \
            libevdev-dev:${{ matrix.arch.name }}

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build ${{ matrix.arch.name }}
        run: |
          mkdir build && cd build
          cmake .. -GNinja \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/debian-${{ matrix.arch.name }}-gcc-toolchain.cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.arch.cross }} \
            -DCMAKE_C_COMPILER=${{ matrix.arch.triplet }}-gcc \
            -DCMAKE_CXX_COMPILER=${{ matrix.arch.triplet }}-g++
          ninja
        
      - name: Prepare export
        run: |
          cd build
          patchelf --replace-needed libinterpose.so libinterpose.${{ matrix.arch.executable }}.so gptokeyb2
          patchelf --set-soname libinterpose.${{ matrix.arch.executable }}.so lib/libinterpose.so
          mv lib/libinterpose.so libinterpose.${{ matrix.arch.executable }}.so
          ${{ matrix.arch.triplet }}-strip gptokeyb2
          mv gptokeyb2 gptokeyb2.${{ matrix.arch.executable }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gptokeyb2_${{ matrix.arch.name }}
          path: |
            ${{ github.workspace }}/build/*.${{ matrix.arch.executable }}*

